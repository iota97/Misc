--- VertexShaderGeneratorGLES_orig.cpp	2019-10-11 15:24:43.114947000 +0200
+++ VertexShaderGeneratorGLES.cpp	2019-10-13 14:22:26.045310341 +0200
@@ -598,11 +598,19 @@
 
 		WRITE(p, "  vec4 viewPos = u_view * vec4(worldpos, 1.0);\n");
 
+		const float fov_factor = 2.0;
+		const float z_offset = 550.0;
+
+		WRITE(p, "  mat4 proj = u_proj;\n");
+		WRITE(p, "  proj[0][0] /= %f;\n", fov_factor);
+		WRITE(p, "  proj[1][1] /= %f;\n", fov_factor);
+		WRITE(p, "  viewPos.z += %f*viewPos.w;\n", z_offset);
+
 		// Final view and projection transforms.
 		if (gstate_c.Supports(GPU_ROUND_DEPTH_TO_16BIT)) {
-			WRITE(p, "  vec4 outPos = depthRoundZVP(u_proj * viewPos);\n");
+			WRITE(p, "  vec4 outPos = depthRoundZVP(proj * viewPos);\n");
 		} else {
-			WRITE(p, "  vec4 outPos = u_proj * viewPos;\n");
+			WRITE(p, "  vec4 outPos = proj * viewPos;\n");
 		}
 
 		// TODO: Declare variables for dots for shade mapping if needed.
